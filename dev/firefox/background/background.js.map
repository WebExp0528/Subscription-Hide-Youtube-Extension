{"version":3,"sources":["webpack://simpletube-extension/./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack://simpletube-extension/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://simpletube-extension/./node_modules/@babel/runtime/regenerator/index.js","webpack://simpletube-extension/./src/background/index.js","webpack://simpletube-extension/./src/utils/ext.js","webpack://simpletube-extension/./src/utils/sendMessages.js","webpack://simpletube-extension/./node_modules/regenerator-runtime/runtime.js","webpack://simpletube-extension/webpack/bootstrap","webpack://simpletube-extension/webpack/runtime/compat get default export","webpack://simpletube-extension/webpack/runtime/define property getters","webpack://simpletube-extension/webpack/runtime/hasOwnProperty shorthand","webpack://simpletube-extension/webpack/runtime/make namespace object","webpack://simpletube-extension/webpack/startup"],"names":["Background","init","console","log","ext","onInstalled","message","sender","reply","onMessage","port","onConnect","tabId","changeInfo","tab","onUpdatedTab","onCreatedTab","type","_port","addListener","msg","onMessageFromExtension","status","sendMessage","MSG_TYPE","getURLFromTab","tabid","Promise","resolve","reject","url","openNewTab","closeTab","id","updateTab","options","getTab","newTab","data","response","background","apis","Extension","self","forEach","api","chrome","e","window","browser","extension","runtime","browserAction","module","exports","RELOADED_PAGE","GET_STATUS","SET_STATUS","msgType"],"mappings":"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;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;;AAEA;AACA;AACA,wCAAwC,WAAW;AACnD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,cAAc;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,kBAAkB;AACnD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,8CAA8C,QAAQ;AACtD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,CAAC;AACD;AACA;AACA;AACA;AACA,EAAE,KAA0B,oBAAoB,CAAE;AAClD;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;UC3uBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA;WACA;WACA,gCAAgC,YAAY;WAC5C;WACA,E;;;;;WCPA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;UCNA;UACA;UACA;UACA","file":"background/background.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","module.exports = require(\"regenerator-runtime\");\n","import ext from \"utils/ext\";\nimport { MSG_TYPE } from \"utils/sendMessages\";\n\n/**\n * Define content script functions\n * @type {class}\n */\nclass Background {\n    constructor() {\n        this.init();\n    }\n\n    /**\n     * Document Ready\n     * @returns {void}\n     */\n    init = () => {\n        console.log(\"loaded Background Scripts\");\n\n        //When extension installed\n        ext.runtime.onInstalled.addListener(() => this.onInstalled());\n\n        //Add message listener in Browser.\n        ext.runtime.onMessage.addListener((message, sender, reply) =>\n            this.onMessage(message, sender, reply)\n        );\n\n        //Add message listener from Extension\n        ext.extension.onConnect.addListener((port) => this.onConnect(port));\n\n        // Add Update listener for tab\n        ext.tabs.onUpdated.addListener((tabId, changeInfo, tab) =>\n            this.onUpdatedTab(tabId, changeInfo, tab)\n        );\n\n        //Add New tab create listener\n        ext.tabs.onCreated.addListener((tab) => this.onCreatedTab(tab));\n    };\n\n    //TODO: Listeners\n\n    /**\n     * Extension Installed\n     */\n    onInstalled = () => {\n        console.log(\"~~~~~Installed Extension!\");\n    };\n\n    /**\n     * Message Handler Function\n     *\n     * @param { object } message\n     * @param { object } sender\n     * @param { object } reply\n     */\n    onMessage = (message, sender, reply) => {\n        console.log(\"~~~~~Received message\", message);\n        switch (message.type) {\n        }\n        return true;\n    };\n\n    /**\n     * Connect with Extension\n     *\n     * @param {*} port\n     */\n    onConnect = (port) => {\n        this._port = port;\n        console.log(\"~~~~~Connected .....\");\n        this._port.onMessage.addListener((msg) =>\n            this.onMessageFromExtension(msg)\n        );\n    };\n\n    /**\n     * Message from Extension\n     *\n     * @param {*} msg\n     */\n    onMessageFromExtension = (msg) => {\n        console.log(\"~~~~Recieved message from Popup:\" + msg);\n    };\n\n    /**\n     *\n     * @param {object} tab\n     */\n    onCreatedTab = (tab) => {\n        console.log(\"~~~~~Created new tab\", tab);\n    };\n\n    /**\n     * When changes tabs\n     *\n     * @param {*} tabId\n     * @param {*} changeInfo\n     * @param {*} tab\n     */\n    onUpdatedTab = (tabId, changeInfo, tab) => {\n        if (changeInfo.status === \"complete\") {\n            this.sendMessage(tab, MSG_TYPE.RELOADED_PAGE);\n        }\n    };\n\n    /**\n     * get url from tab\n     * @param {number} tabid\n     */\n    getURLFromTab = (tabid) => {\n        return new Promise(function (resolve, reject) {\n            ext.tabs.get(tabid, function (tab) {\n                resolve(tab.url ? tab.url : \"\");\n            });\n        });\n    };\n\n    /**\n     * open new tab\n     *\n     * @param {string} url\n     */\n    openNewTab = (url) => {\n        return new Promise((resolve, reject) =>\n            ext.tabs.create({ url }, function (tab) {\n                resolve(tab);\n            })\n        );\n    };\n\n    /**\n     * Close specific tab\n     * @param {} tab\n     */\n    closeTab = (tab) => {\n        return new Promise((resolve, reject) =>\n            ext.tabs.remove(tab.id, () => {\n                resolve();\n            })\n        );\n    };\n\n    /**\n     * Update Tab\n     */\n    updateTab = (tab, options) => {\n        return new Promise((resolve, reject) => {\n            ext.tabs.update(tab.id, options, function (updateTab) {\n                resolve(updateTab);\n            });\n        });\n    };\n\n    /**\n     * Get info from tabId\n     */\n    getTab = (tab) => {\n        return new Promise((resolve) => {\n            ext.tabs.get(tab.id, function (newTab) {\n                resolve(newTab);\n            });\n        });\n    };\n\n    /**\n     * send message\n     */\n    sendMessage = (tab, type, data) => {\n        return new Promise((resolve, reject) =>\n            ext.tabs.sendMessage(tab.id, { type, data }, function (response) {\n                resolve(response);\n            })\n        );\n    };\n}\n\nexport const background = new Background();\n","/* global browser, window, chrome */\n\nconst apis = [\n    \"alarms\",\n    \"bookmarks\",\n    \"browserAction\",\n    \"commands\",\n    \"contextMenus\",\n    \"cookies\",\n    \"downloads\",\n    \"events\",\n    \"extension\",\n    \"extensionTypes\",\n    \"history\",\n    \"i18n\",\n    \"idle\",\n    \"notifications\",\n    \"pageAction\",\n    \"runtime\",\n    \"storage\",\n    \"tabs\",\n    \"webNavigation\",\n    \"webRequest\",\n    \"windows\",\n];\n\nfunction Extension() {\n    const self = this;\n\n    apis.forEach((api) => {\n        self[api] = null;\n\n        try {\n            if (chrome[api]) {\n                self[api] = chrome[api];\n            }\n        } catch (e) {\n            return;\n        }\n\n        try {\n            if (window[api]) {\n                self[api] = window[api];\n            }\n        } catch (e) {\n            return;\n        }\n\n        try {\n            if (browser[api]) {\n                self[api] = browser[api];\n            }\n        } catch (e) {\n            return;\n        }\n\n        try {\n            self.api = browser.extension[api];\n        } catch (e) {\n            // I want application to not crush, but don't care about the message\n        }\n    });\n\n    try {\n        if (browser && browser.runtime) {\n            this.runtime = browser.runtime;\n        }\n    } catch (e) {\n        return;\n    }\n\n    try {\n        if (browser && browser.browserAction) {\n            this.browserAction = browser.browserAction;\n        }\n    } catch (e) {\n        // I want application to not crush, but don't care about the message\n    }\n}\n\nmodule.exports = new Extension();\n","import ext from \"./ext\";\n\n/**\n * MSG Types\n */\nexport const MSG_TYPE = {\n    RELOADED_PAGE: 10000000,\n    GET_STATUS: 10000001,\n    SET_STATUS: 10000001,\n};\n\n/**\n * Send Message to background script\n * @param { keyof MSG_TYPE } msgType\n * @param { {[string]:any} } data\n */\nexport const sendMessage = async (msgType, data) => {\n    const msg = {\n        msgType,\n        data,\n    };\n    console.log(\"===== Sending Message => \", msg);\n    return new Promise((resolve, reject) => {\n        try {\n            ext.runtime.sendMessage(msg, (response) => {\n                resolve(response);\n            });\n        } catch (e) {\n            console.log(\" SendMessage Failed => \", e);\n            reject(e);\n        }\n    });\n};\n\nexport default sendMessage;\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(\"./src/background/index.js\");\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}