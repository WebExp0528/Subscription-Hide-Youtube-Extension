{"version":3,"sources":["webpack://simpletube-extension/./src/utils/hot-reload.js"],"names":["filesInDirectory","dir","Promise","resolve","createReader","readEntries","entries","all","filter","e","name","map","isDirectory","resolvePromise","file","then","files","concat","timestampForFilesInDirectory","f","lastModifiedDate","join","reload","chrome","tabs","query","active","currentWindow","id","runtime","watchChanges","lastTimestamp","timestamp","setTimeout","management","getSelf","self","installType","getPackageDirectoryEntry"],"mappings":";;;;;;;;;;;;;;;;AAAA;AAEA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,GAAD;AAAA,SACrB,IAAIC,OAAJ,CAAY,UAACC,OAAD;AAAA,WACRF,GAAG,CAACG,YAAJ,GAAmBC,WAAnB,CAA+B,UAACC,OAAD;AAAA,aAC3BJ,OAAO,CAACK,GAAR,CACID,OAAO,CACFE,MADL,CACY,UAACC,CAAD;AAAA,eAAOA,CAAC,CAACC,IAAF,CAAO,CAAP,MAAc,GAArB;AAAA,OADZ,EAEKC,GAFL,CAES,UAACF,CAAD;AAAA,eACDA,CAAC,CAACG,WAAF,GACMZ,gBAAgB,CAACS,CAAD,CADtB,GAEM,IAAIP,OAAJ,CAAY,UAACW,cAAD;AAAA,iBACRJ,CAAC,CAACK,IAAF,CAAOD,cAAP,CADQ;AAAA,SAAZ,CAHL;AAAA,OAFT,CADJ,EAWKE,IAXL,CAWU,UAACC,KAAD;AAAA;;AAAA,eAAW,YAAGC,MAAH,gCAAaD,KAAb,EAAX;AAAA,OAXV,EAYKD,IAZL,CAYUZ,OAZV,CAD2B;AAAA,KAA/B,CADQ;AAAA,GAAZ,CADqB;AAAA,CAAzB;;AAmBA,IAAMe,4BAA4B,GAAG,SAA/BA,4BAA+B,CAACjB,GAAD;AAAA,SACjCD,gBAAgB,CAACC,GAAD,CAAhB,CAAsBc,IAAtB,CAA2B,UAACC,KAAD;AAAA,WACvBA,KAAK,CAACL,GAAN,CAAU,UAACQ,CAAD;AAAA,aAAOA,CAAC,CAACT,IAAF,GAASS,CAAC,CAACC,gBAAlB;AAAA,KAAV,EAA8CC,IAA9C,EADuB;AAAA,GAA3B,CADiC;AAAA,CAArC;;AAKA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACjBC,QAAM,CAACC,IAAP,CAAYC,KAAZ,CAAkB;AAAEC,UAAM,EAAE,IAAV;AAAgBC,iBAAa,EAAE;AAA/B,GAAlB,EAAyD,UAACH,IAAD,EAAU;AAC/D,QAAIA,IAAI,CAAC,CAAD,CAAR,EAAa;AACTD,YAAM,CAACC,IAAP,CAAYF,MAAZ,CAAmBE,IAAI,CAAC,CAAD,CAAJ,CAAQI,EAA3B;AACH;;AAEDL,UAAM,CAACM,OAAP,CAAeP,MAAf;AACH,GAND;AAOH,CARD;;AAUA,IAAMQ,YAAY,GAAG,SAAfA,YAAe,CAAC7B,GAAD,EAAM8B,aAAN,EAAwB;AACzCb,8BAA4B,CAACjB,GAAD,CAA5B,CAAkCc,IAAlC,CAAuC,UAACiB,SAAD,EAAe;AAClD,QAAI,CAACD,aAAD,IAAkBA,aAAa,KAAKC,SAAxC,EAAmD;AAC/CC,gBAAU,CAAC;AAAA,eAAMH,YAAY,CAAC7B,GAAD,EAAM+B,SAAN,CAAlB;AAAA,OAAD,EAAqC,IAArC,CAAV;AACH,KAFD,MAEO;AACHV,YAAM;AACT;AACJ,GAND;AAOH,CARD;;AAUA,IAAIC,MAAJ,EAAY;AACRA,QAAM,CAACW,UAAP,CAAkBC,OAAlB,CAA0B,UAACC,IAAD,EAAU;AAChC,QAAIA,IAAI,CAACC,WAAL,KAAqB,aAAzB,EAAwC;AACpCd,YAAM,CAACM,OAAP,CAAeS,wBAAf,CAAwC,UAACrC,GAAD;AAAA,eAAS6B,YAAY,CAAC7B,GAAD,CAArB;AAAA,OAAxC;AACH;AACJ,GAJD;AAKH,C","file":"hotreload/hotreload.js","sourcesContent":["/* global chrome */\n\nconst filesInDirectory = (dir) =>\n    new Promise((resolve) =>\n        dir.createReader().readEntries((entries) =>\n            Promise.all(\n                entries\n                    .filter((e) => e.name[0] !== \".\")\n                    .map((e) =>\n                        e.isDirectory\n                            ? filesInDirectory(e)\n                            : new Promise((resolvePromise) =>\n                                  e.file(resolvePromise)\n                              )\n                    )\n            )\n                .then((files) => [].concat(...files))\n                .then(resolve)\n        )\n    );\n\nconst timestampForFilesInDirectory = (dir) =>\n    filesInDirectory(dir).then((files) =>\n        files.map((f) => f.name + f.lastModifiedDate).join()\n    );\n\nconst reload = () => {\n    chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n        if (tabs[0]) {\n            chrome.tabs.reload(tabs[0].id);\n        }\n\n        chrome.runtime.reload();\n    });\n};\n\nconst watchChanges = (dir, lastTimestamp) => {\n    timestampForFilesInDirectory(dir).then((timestamp) => {\n        if (!lastTimestamp || lastTimestamp === timestamp) {\n            setTimeout(() => watchChanges(dir, timestamp), 1000);\n        } else {\n            reload();\n        }\n    });\n};\n\nif (chrome) {\n    chrome.management.getSelf((self) => {\n        if (self.installType === \"development\") {\n            chrome.runtime.getPackageDirectoryEntry((dir) => watchChanges(dir));\n        }\n    });\n}\n"],"sourceRoot":""}